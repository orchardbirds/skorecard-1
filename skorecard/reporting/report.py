import pandas as pd
import numpy as np

from skorecard.bucket_mapping import FeaturesBucketMapping


def create_report(X, y, column, bucketer, epsilon=0.00001, verbose=False):
    """Calculates summary statistics for a bucket generated by a skorecard bucketing object.

    This report currently works for just 1 column at a time.

    Args:
         X (np.array): features
         y (np.array): target
         column (str): column for which you want the report
         bucketer: Skorecard bucket object

    Returns:
        df (pandas DataFrame): reporting df
    """
    X = X.copy()

    if isinstance(bucketer, FeaturesBucketMapping):
        bucketer = bucketer.map

    bucket_mapping = bucketer.features_bucket_mapping_[column]
    X_transform = bucketer.transform(X)[[column]]
    X_transform = X_transform.rename(columns={column: "Bucket_id"})

    X_transform["Event"] = y

    stats = X_transform.groupby("Bucket_id", as_index=False).agg(
        def_rate=pd.NamedAgg(column="Event", aggfunc="mean"),
        Event=pd.NamedAgg(column="Event", aggfunc="sum"),
        Count=pd.NamedAgg(column="Bucket_id", aggfunc="count"),
    )

    stats["bin_labels"] = stats["Bucket_id"].map(bucket_mapping.labels)
    stats["Count (%)"] = (stats["Count"] / stats["Count"].sum()).apply(lambda x: np.round(x * 100, 2))

    stats["Non Event"] = stats["Count"] - stats["Event"]
    # Default rates
    stats["Event Rate"] = stats["Event"] / stats["Count"]  # todo: can we divide by 0 accidentally?

    stats["% Event"] = stats["Event"] / stats["Event"].sum()
    stats["% Non Event"] = stats["Non Event"] / stats["Non Event"].sum()

    stats["WoE"] = ((stats["% Event"] + epsilon) / (stats["% Non Event"] + epsilon)).apply(lambda x: np.log(x))

    stats["IV"] = (stats["% Event"] - stats["% Non Event"]) * stats["WoE"]

    if verbose:
        iv_total = stats["IV"].sum()
        print(f"IV for {column} = {np.round(iv_total, 4)}")
    columns = [
        "Bucket_id",
        "bin_labels",
        "Count",
        "Count (%)",
        "Event",
        "% Event",
        "Non Event",
        "% Non Event",
        "Event Rate",
        "WoE",
        "IV",
    ]
    return stats.sort_values(by="Bucket_id")[columns]
